pipeline{
    agent any
     
        stages{
            stage("Git Clone"){
                steps{
                git credentialsId: '6d9b2875-79c0-498c-9f0c-8a9d1fa06380', url: 'https://github.com/msg2fahd/maven-project.git'
                }
                    
            }
            // stage("Build jar file"){
            //    steps{
            //    bat 'mvn clean install'
            //     } 
            // }

            stage("Scanning-build"){
                steps{
                    // script{
                    // withSonarQubeEnv('sonar-scanner') {
                    //     bat 'mvn sonar:sonar'
                    //     }
                    //  bat 'mvn clean install'   
                    // }  
                    bat 'mvn clean verify sonar:sonar'
  
                }
            }
            stage("Email-Notification"){
                steps{
                mail bcc: '', body: '''Hi,
                welcome to jenkins email alert.''', cc: '', from: '', replyTo: '', subject: 'jenkins job', to: '5mo6tx@gmail.com'
            }
        }
            
        }
         stage('Clone sources')  {

             steps  {

                script {
   
                   def filelist = getChangedFilesList() // List of filenames that have changed

                   def filename = filelist.find{item->item.contains("yaml")} //Returns the list of files having the yaml file extension from the filelist ArrayList

                   echo "${filename}" //<filename>.yaml

                   env.StoryId = filename.split("_")[0]     // JiraId will store the value that is used at various stages  

                   echo "${env.StoryId}"

                  }

             }

        }

    }
        @NonCPS

def getChangedFilesList() {


       changedFiles = []

       for (changeLogSet in currentBuild.changeSets) { 

               for (entry in changeLogSet.getItems()) { // for each commit in the detected changes

                      for (file in entry.getAffectedFiles()) {

                             changedFiles.add(file.getPath()) // add changed file to list

                      }

               }

       }

       return changedFiles


}
            
        
}